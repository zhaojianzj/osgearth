/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2015 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTH_BILLBOARD_BILLBOARD_EXTENSION
#define OSGEARTH_BILLBOARD_BILLBOARD_EXTENSION 1

#include "BillboardOptions"
#include <osgEarth/Extension>
#include <osgEarth/MapNode>
#include <osgEarthFeatures/FeatureSource>

namespace osgEarth { namespace Billboard
{
    using namespace osgEarth;
    using namespace osgEarth::Features;

    /**
     * Extension for loading the splatting effect on demand.
     */
    class BillboardExtension : public Extension, public ExtensionInterface<MapNode>
    {
    public:
        META_Object(osgearth_ext_billboard, BillboardExtension);

        // CTORs
        BillboardExtension();
        BillboardExtension(const BillboardOptions& options);

        // DTOR
        virtual ~BillboardExtension();


    public: // Extension

        void setDBOptions(const osgDB::Options* dbOptions);


    public: // ExtensionInterface<MapNode>

        bool connect(MapNode* mapNode);

        bool disconnect(MapNode* mapNode);


    protected: // Object
        BillboardExtension(const BillboardExtension& rhs, const osg::CopyOp& op) { }

    private:
        const BillboardOptions                 _options;
        osg::ref_ptr<const osgDB::Options>     _dbOptions;
        osg::ref_ptr<FeatureSource>            _features;
    };

} } // namespace osgEarth::Billboard

#endif // OSGEARTH_BILLBOARD_BILLBOARD_EXTENSION
